
Title: CSS Structure

	Notation:

	This page uses a very simplified notation so you can quickly scan through the CSS classes.

	- Uppercase tags represent CSS classes, so <CBody> is a HTML element with CBody applied.
	  Style with ".CBody".

	- Lowercase tags represent HTML elements, so <body NDPage> is the body element with NDPage
	  applied.  Style with "body.NDPage" or just ".NDPage".

		- Most tags will not specify a element type so you should not rely on them being a particular
		  type.

	- Multiple tags are multiple CSS classes applied to the same element, so <body NDPage NDContentPage>
	  is a body element with both NDPage and NDContentPage applied.  Style with "body.NDPage.NDContentPage",
	  ".NDPage.NDContentPage", or just ".NDContentPage".

	- Hash symbols on tags represent HTML IDs, so <#NDHeader> is a HTML element with NDHeader as
	  the ID.  Style with "#NDHeader".

	- Question marks after tags means it may or may not appear, so <#NDMenuSizer Dragging?> means
	  the element may or may not have the CSS class Dragging applied, in this case because it only appears
	  while it's actively being dragged.

	Hopefully everything else should be self-explanitory.




Topic: Frame Page
_______________________________________________________________________________

--- text ---

	<body NDPage NDFramePage [ThemeName]?>

		<#NDHeader>
			<#HTitle>...</#HTitle>
			<#HSubtitle>...</#HSubtitle>
			<#NDThemeSwitcher>...</#NDThemeSwitcher>
			<input #NDSearchField />
			<#NDSearchResults>...</#NDSearchResults>
		</#NDHeader>

		<#NDLoadingNotice>
			(visible by default, removed by scripts once loaded)
		</#NDLoadingNotice>

		<#NDJavaScriptRequiredNotice>
			(only visible when JavaScript is disabled)
		</#NDJavaScriptRequiredNotice>

		<#NDMenu>...</#NDMenu>

		<#NDMenuSizer Dragging?>...</#NDMenuSizer>

		<#NDSummary>...</#NDSummary>

		<#NDSummarySizer Dragging?>...</#NDSummarySizer>

		<#NDContent>
			<iframe #CFrame></iframe>
		</#NDContent>

		<#NDFooter>
			<#FGeneratedBy>...</#FGeneratedBy>
			<#FCopyright>...</#FCopyright>
			<#FTimestamp>...</#FTimestamp>
		</#NDFooter>

	</body NDPage NDFramePage [ThemeName]?>

----------

	[ThemeName]:

		If there are one or more themes defined in <NDThemes>, the ID of the selected theme will be applied to the body
		as a CSS class with "Theme" appended, such as ID "Light" becoming "LightTheme".  The CSS classes for the themes
		in the default style are "LightTheme", "DarkTheme", and "BlackTheme".

		You can override which themes available by calling <NDFramePage.SetThemes()> from a Frame OnLoad statement
		in <Style.txt>.  You can also force it to be a particular one by calling <NDFramePage.ForceTheme(ID)>, or call
		<NDFramePage.DisableThemes()> to turn them off altogether.  When disabled there will be no theme CSS class
		added to the body, but when forced it will be the one for the theme you forced.



Topic: Menu
_______________________________________________________________________________

Only the topmost #NDMenu tag is in the generated HTML.  The remaining structure is generated by the <NDMenu>
JavaScript class included in the DefaultJS style.  Other styles may or may not use this class.

--- text ---

	<#NDMenu>

		<#MTabBar>

			<a MTab #M[Type]Tab Selected? Wide/Narrow?>
				<MTabIcon></MTabIcon>
				<MTabTitle>Title</MTabTitle>
			</a MTab>

		</#MTabBar>

		<#MContent>

			<MTabAsFolder #M[Type]Tab MEntry>
				<MTabIcon></MTabIcon>
				<MTabTitle>Title</MTabTitle>
			</MTabAsFolder>

			<MFolder MEntry Parent Empty? Selected?>
				Name
			</MFolder>

			<MFile MEntry TopLevel? Selected?>
				Name
			</MFile>

			<MFolder MEntry Child TopLevel?>
				<MFolderIcon></MFolderIcon>
				Name
			</MFolder>

			<MLoadingNotice>
			</MLoadingNotice>

		</#MContent>
	</#NDMenu>

----------

	If there's nothing selected, not even a tab, there will be no MTabBar.  Instead the tabs will appear as MTabAsFolder
	entries so they can be formatted more like regular menu entries.

	If a tab is selected there will be a MTabBar followed by a list of MFile and MFolder entries representing the root level
	contents of that tab.  They will all have the TopLevel attribute applied.

	Once a folder is selected there will be a MTabBar followed by a stack of parent MFolders representing the path from
	the tab to the selected folder, then followed by the MFile and MFolder entries that are the contents of that folder.

	Most entries will be "a" tags, though they may be div tags if they don't need to serve as a link, such as empty and
	selected folders.  Use the Parent, Child, and Selected classes to distinguish between types of folder entries, such as
	.MFolder.Child.

	At any point the sequence above can be truncated with a MLoadingNotice tab if the menu is not completely loaded yet.



Topic: Summary
_______________________________________________________________________________

Only the topmost #NDSummary tag is in the generated HTML.  The remaining structure is generated by the <NDSummary>
JavaScript class included in the DefaultJS style.  Other styles may or may not use this class.

--- text ---

	<#NDSummary>
		<#SuContent>

			<SuEntry T[CommentType] L[Language]>
				<SuEntryIcon></SuEntryIcon>
				Name
			</SuEntry>

			...

			<SuLoadingNotice>
			</SuLoadingNotice>

		</#SuContent>
	</#NDSummary>

----------



Topic: Content Page
_______________________________________________________________________________

--- text ---

	<body NDPage NDContentPage [ThemeName]?>

		<CTopic T[Type] L[Language] first/last?>

			<CTitle>
				<Qualifier>Package.Package.</Qualifier>Title
			</CTitle>

			<NDPrototype>...</NDPrototype>

			<CBody>

				<CHeading>Heading</CHeading>

				<p>Paragraph text</p>

				<ul>
					<li><p>Bullet list item</p></li>
					<li><p>Bullet list item</p></li>
					<li>
						<p>Bullet list item paragraph 1</p>
						<p>Bullet list item paragraph 2</p>
						<ul>
							<li>Nested bullet list item</li>
						</ul>
					</li>
				</ul>

				<table CDescriptionList>
					<tr>
						<td CDLEntry>
							Entry
							<CDLParameterType>Type</CDLParameterType>?
						</td CDLEntry>

						<td CDLDescription>
							Description
						</td CDLDescription>
					</tr>
				</table CDescriptionList>

				<pre CText/CCode>
					Code<br>
					Code<br>
					Code
				</pre>

				<p>Text <a SeeImageLink>(see image.jpg)</a SeeImageLink> text.</p>

				<CImage>
					<a ZoomLink>
						<img KnownDimensions? UnknownDimensions?>
					</a ZoomLink>
					<CICaption>Caption</CICaption>?
				</CImage>

			</CBody>

		</CTopic>

	</body NDPage NDContentPage [ThemeName]?>

----------

	[ThemeName]:

		If there are one or more themes defined in <NDThemes>, the ID of the selected theme will be applied to the body
		as a CSS class with "Theme" appended, such as ID "Light" becoming "LightTheme".  The CSS classes for the themes
		in the default style are "LightTheme", "DarkTheme", and "BlackTheme".

		You can override which themes available by calling <NDFramePage.SetThemes()> from a Frame OnLoad statement
		in <Style.txt>.  You can also force it to be a particular one by calling <NDFramePage.ForceTheme(ID)>, or call
		<NDFramePage.DisableThemes()> to turn them off altogether.  When disabled there will be no theme CSS class
		added to the body, but when forced it will be the one for the theme you forced.



Topic: Prototype
_______________________________________________________________________________


Frame:

--- text ---

	<NDPrototype #NDPrototype[ID] WideForm/Narrowform>

		section
		section
		...

	</NDPrototype #NDPrototype[ID] WideForm/NarrowForm>

----------

The prototype will only have a WideForm or NarrowForm attribute if it contains a parameter section.


Plain Section:

--- text ---

	<PSection PPlainSection>

		content

	</PSection PPlainSection>

----------


Parameter Section, Wide Form:

--- text ---

	<PSection PParameterSection CStyle/PascalStyle>
		<table>
			<tr>

				<td PBeforeParameters>
					...
				</td PBeforeParameters>

				<td PParametersParentCell>
					[Parameter Table]
				</td PParametersParentCell>

				<td PAfterParameters>
					...
				</td PAfterParameters>

			</tr>
		</table>
	</PSection PParameterSection WideForm CStyle/PascalStyle>

----------


Parameter Section, Narrow Form:

--- text ---

	<PSection PParameterSection CStyle/PascalStyle>
		<table>
			<tr>

				<td PBeforeParameters>
					...
				</td PBeforeParameters>

			</tr><tr>

				<td PParametersParentCell>
					[Parameter Table]
				</td PParametersParentCell>

			</tr><tr>

				<td PAfterParameters>
					...
				</td PAfterParameters>

			</tr>
		</table>
	</PSection PParameterSection NarrowForm CStyle/PascalStyle>

----------


Parameter Table:

--- text ---

		<table PParameters>
			<tr>

				<td P[ColumnType]>column</td P[ColumnType]>
				<td P[ColumnType]>column</td P[ColumnType]>
				...

			</tr><tr>
				...
			</tr>
		</table PParameters>

----------

P[ColumnType]:

	PModifierQualifier - For C-style prototypes, a separate column for modifiers and qualifiers.
	PType - The parameter type.  For C-style prototypes this will only be the last word.  For Pascal-style
					prototypes this will be the entire symbol.
	PTypeNameSeparator - For Pascal-style prototypes, the symbol separating the name from the type.
	PSymbols - Symbols before a parameter name that should be formatted with the name, such as * and &.
	PName - The parameter name.
	PDefaultValueSeparator - If present, the symbol for assigning a default value like = or :=.
	PDefaultValue - The default value.
	PPropertyValueSeparator - If present, the symbol for assigning a value to a property like = or :.
	PPropertyValue - The property value, such as could appear in Java annotations.



Topic: Class Prototype
_______________________________________________________________________________

--- text ---

	<NDClassPrototype HasParents? HasChildren?>

		<CPEntry T[CommentType] Current/Parent/Child>

			<CPPrePrototypeLine>
				...
			</CPPrePrototypeLine>

			<CPModifiers>text</CPModifiers>?

			<CPName>
				<Qualifier>Package.Package.</Qualifier>Title<TemplateSignature>signature</TemplateSignature>
			</CPName>

			<CPPostPrototypeLine>
				...
			</CPPostPrototypeLine>

		</CPEntry T[CommentType] Current/Parent/Child>

		<a CPAdditionalChildrenNotice>Text</a CPAdditionalChildrenNotice>

		<CPAdditionalChildren>

			<CPEntry>...</CPEntry>

		</CPAdditionalChildren>

	</NDClassPrototype HasParents? HasChildren?>

----------



Topic: Tool Tip
_______________________________________________________________________________

--- text ---

	<NDToolTip T[Type] L[Language]>

		<NDPrototype>...</NDPrototype>

		<TTSummary>Paragraph text</TTSummary>

	</NDToolTip>

----------

The summary paragraph will not have separate <p> tags.



Topic: Search
_______________________________________________________________________________

--- text ---

	<input #NDSearchField DefaultText? />

	<#NDSearchResults>
		<#SeContent>

			<SeEntry #SeSelectedEntry?>
				<SeEntryIcon></SeEntryIcon>
				<SeQualifier>Package.Package.</SeQualifier>Name
			</SeEntry>

			<SeEntry SeParent open/closed #SeSelectedEntry?>
				... <SeChildCount># children</SeChildCount>
			</SeEntry>
			<SeChildren>
				<SeEntry>...</SeEntry>
				...
			</SeChildren>

			<SeStatus Searching? NoResults?>...</SeStatus>

		</#SeContent>
	</#NDSearchResults>

----------

SeChildren and its members will only appear if the SeParent is open.



Topic: Home Page
_______________________________________________________________________________

--- text ---

	<body NDPage NDHomePage>

		<HFrame>

			<HContent>

				<HTitle>
					Title
				</HTitle>

				<HSubtitle>?
					Subtitle
				</HSubtitle>

				<HFooter>
					<HGeneratedBy>Generated by text</HGeneratedBy>
					<HCopyright>Copyright text</HCopyright>
					<HTimestamp>Timestamp text</HTimestamp>
				</HFooter>

			</HContent>
		</HFrame>

	</body NDPage NDHomePage>

----------
